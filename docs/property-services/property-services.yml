openapi: 3.0.0
info:
  version: 1.0.0
  title: eGov Property Tax Information System.
  description: |
    APIs for Property Tax module. This modules handles assessment of new properties, changes to existing properties (Detail Updates, division of property, etc.),  search of required properties and property tax.
  contact:
    name: Egovernments Foundation
    email: contact@egovernments.org
x-module: PT
x-common-path: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml'
paths:
  /property/_create:
    post:
      summary: Create new property.
      description: API to create new property.
      responses:
        '201':
          description: Property created sucessfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '400':
          description: Property(s) creation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Property
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRequest'
        description: Details for the new property + RequestInfo meta data.
        required: true
  /property/_update:
    post:
      summary: Update existing property.
      description: Updates a given `Property` with newer details.
      tags:
        - Property
      responses:
        '200':
          description: Update Property successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '400':
          description: Update Property failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRequest'
        description: Request header for the property Request.
        required: true
  /property/_search:
    post:
      summary: Get the list of properties defined in the system.
      description: |
        Get the properties list based on the input parameters.
      parameters:
        - $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-0-3.yml#/components/parameters/RequestInfo'
        - $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-0-3.yml#/components/parameters/tenantId'
        - name: name
          in: query
          description: Name of owner whose property is to be searched.
          required: false
          allowEmptyValue: true
          schema:
            type: string
            format: varchar
        - name: propertyIds
          in: query
          description: List of system generated ids of properties.
          required: false
          schema:
            type: string
            format: varchar
        - name: oldpropertyids
          in: query
          required: false
          description: List of oldassessmentNumbers to search..
          schema:
            type: string
            exclusiveMinimum: true
            exclusiveMaximum: false
            minLength: 4
            maxLength: 128
        - name: mobileNumber
          in: query
          description: MobileNumber of owner whose property is to be searched.
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Property
  /property/_delete:
    post:
      summary: Delete existing property.
      description: The API will delete the property associated with the given propertyId from the system  The API works in idempotent manner.
      tags:
        - Property
      responses:
        '200':
          description: Deleted Property successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PropertyDeleteResponse'
        '404':
          description: Delete Property failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDeleteRequest'
        description: Request header for the property delete Request.
        required: true
  /property/_cancel:
    post:
      summary: deactivate/cancel an active property.
      description: The API will deactivate/cancel the property associated with the given propertyId from the system. The API works in idempotent manner
      tags:
        - Property
      responses:
        '200':
          description: Property deactivated successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PropertyDeleteResponse'
        '404':
          description: Property not found
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDeleteRequest'
        description: Request header for the property delete Request.
        required: true
  /assessment/_search:
    post:
      summary: Get the list of Asssessments defined in the system.
      description: |
        Get the assessments list based on the input parameters.
      parameters:
        - $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/components/parameters/requestInfo'
        - $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/components/parameters/tenantId'
        - name: propertyIds
          in: query
          description: List of system generated ids of properties.
          required: false
          schema:
            type: string
            format: varchar
        - name: assessmentNumbers
          in: query
          required: false
          description: List of assessmentNumbers to search.
          schema:
            type: string
            exclusiveMinimum: true
            exclusiveMaximum: false
            minLength: 4
            maxLength: 128
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssessmentResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Assessment
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        description: Details for the new assessment + RequestInfo meta data.
        required: true
  /assessment/_create:
    post:
      summary: Create new assessment.
      description: API to create new assessment.
      responses:
        '201':
          description: Assessment created sucessfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssessmentResponse'
        '400':
          description: Assessment creation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Assessment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequest'
        description: Details for the new assessment + RequestInfo meta data.
        required: true
  /assessment/_update:
    post:
      summary: Update existing asessment.
      description: Updates a given `assessment` with newer details.
      tags:
        - Assessment
      responses:
        '200':
          description: Update assessment successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssessmentResponse'
        '400':
          description: Update assessment failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequest'
        description: Request header for the assessment Request.
        required: true
  /assessment/_delete:
    post:
      summary: delete existing asessment
      description: Deletes an assessment based on assessment number.
      tags:
        - Assessment
      responses:
        '200':
          description: deleted assessment successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssessmentDeleteResponse'
        '404':
          description: Assessment not found
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentDeleteRequest'
        description: Request header for the assessment Request.
        required: true
  /assessment/_cancel:
    post:
      summary: Deactivates/Cancels existing asessments.
      description: Deactivates/Cancels based on the given assessment number
      tags:
        - Assessment
      responses:
        '200':
          description: Deactivates/Cancels assessment successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssessmentDeleteResponse'
        '400':
          description: Update assessment(s) failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentDeleteRequest'
        description: Request header for the assessment Request.
        required: true
servers:
  - url: 'https://egov-micro-dev.egovernments.org'
components:
  schemas:
    PropertyInfo:
      type: object
      description: This is lightweight property object that can be used as reference by definitions needing property linking. Actual Property Object extends this to include more elaborate attributes of the property.
      properties:
        id:
          type: string
          description: Unique Identifier of the Property for internal reference.
          readOnly: true
          minLength: 1
          maxLength: 64
        propertyId:
          type: string
          description: Unique Identifier of the Property.
          readOnly: true
          minLength: 1
          maxLength: 64
        tenantId:
          type: string
          description: tenant id of the Property
          maxLength: 256
          minLength: 2
          nullable: false
        accountId:
          type: string
          description: UUID of the user to which the property will be associated
          maxLength: 64
          minLength: 1
          readOnly: true
        oldPropertyId:
          type: string
          description: 'Old upic no of the Property. ULBs have the existing property in their system/manual records with their identification number, they want to continue the old reference number in this case the same identification number will be captured here.'
          maxLength: 256
          minLength: 1
        status:
          type: string
          description: status of the Property
          enum:
            - ACTIVE
            - INACTIVE
        address:
          $ref: '#/components/schemas/Address'
      required:
        - address
        - tenantId
    Property:
      allOf:
        - $ref: '#/components/schemas/PropertyInfo'
        - type: object
          description: A Object holds the basic data for a property
          properties:
            acknowldgementNumber:
              type: string
              description: Acknowldgement number given to citizen on submitting the application for creation or modification of the property.
              maxLength: 64
              minLength: 1
              readOnly: true
            propertyType:
              type: string
              description: 'Type of a property like Private, Vacant Land, State Government, Central Government etc.'
              maxLength: 64
              example: VACANT
            usageCategory:
              type: string
              description: 'This is about the usage of the property like Residential, Non-residential, Mixed(Property which is getting used for Residential, Non-residential purpose)'
              maxLength: 64
              example: RESIDENTIAL
            ownershipCategory:
              type: string
              description: The type of ownership of the property.
              maxLength: 64
            owners:
              description: 'Property owners, these will be citizen users in system.'
              type: array
              items:
                $ref: '#/components/schemas/OwnerInfo'
            institution:
              description: The details of institution if the ownershipCategory is institutional
              items:
                $ref: '#/components/schemas/Institution'
            creationReason:
              type: string
              description: New property comes into system either property is newly constructed or existing property got sub divided. Here the reason for creation will be captured.
              enum:
                - NEWPROPERTY
                - SUBDIVISION
            occupancyDate:
              type: integer
              format: int64
              description: Property is constructed but the tax will be applicable only from the occupation date (time in epoch). System capture that date here.
            constructionDate:
              type: integer
              format: int64
              description: The date when the property was constructed
            noOfFloors:
              type: integer
              format: int64
              description: no of floors in the property
            landArea:
              type: number
              format: float
              description: Land area of the property in sq ft
            source:
              type: string
              description: Source of a property data. The properties will be created in a system by different mboules
              enum:
                - PT
                - TL
                - WAS
                - DATA_MIGRATION
            documents:
              description: 'The documents attached during property create, modification or any transaction happened on the property.'
              type: array
              items:
                $ref: '#/components/schemas/Document'
            additionalDetails:
              type: object
              description: 'The json (array of ''#/definitions/Factor'')'
    Assessment:
      description: Financial year wise property details will be capture here. For each financial year property details may change.
      type: object
      properties:
        financialYear:
          type: string
          description: Latest tax paid year.
          example: 2019-20
        assessmentNumber:
          type: string
          description: unique assesment number for each financial year.
          maxLength: 64
          readOnly: true
        id:
          type: string
          description: id of the property with which the assessment is associated.
          maxLength: 64
          readOnly: true
        assessmentDate:
          type: integer
          format: int64
          description: There will be work flow to create a new property in a system. The assessment date is the final approval and UPIC no generation date.
        status:
          type: string
          description: status of the Property
          enum:
            - ACTIVE
            - INACTIVE
        source:
          type: string
          description: Source of a assessment data. The properties will be created in a system based on the data avaialble in their manual records or during field survey. There can be more from client to client.
          enum:
            - MUNICIPAL_RECORDS
            - FIELD_SURVEY
        buildUpArea:
          type: number
          format: float
          description: Total built up area in sq ft
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
        units:
          description: 'List of Units in the property. E.g. A property might have 2 units in ground floor and 1 ion first floor. Unit can be Room, floor or any bounded area with a defined usage.'
          type: array
          items:
            $ref: '#/components/schemas/Unit'
        documents:
          description: 'The documents attached during assessment, modification or any transaction happened on the property.'
          type: array
          items:
            $ref: '#/components/schemas/Document'
        additionalDetails:
          type: object
          description: 'The json (array of ''#/definitions/Factor'')'
        channel:
          type: string
          description: 'Property can be created from different channels Eg. System (properties created by ULB officials), CFC Counter (From citizen faciliation counters) etc. Here we are defining some known channels, there can be more client to client.'
          enum:
            - SYSTEM
            - CFC_COUNTER
            - CITIZEN
            - DATA_ENTRY
            - MIGRATION
      required:
        - financialYear
    Institution:
      type: object
      properties:
        id:
          type: string
          maxLength: 64
          description: Unique Identifier of the Institution(UUID).
        tenantId:
          type: string
          description: tenant id of the Property
          maxLength: 256
        type:
          type: string
          description: Institution type.
          maxLength: 64
        designation:
          type: string
          maxLength: 64
          description: Designation of the person doing the assessment on behalf of the institution
    OwnerInfo:
      type: object
      properties:
        name:
          type: string
          description: The name of the owner.
          maxLength: 256
        mobileNumber:
          type: string
          description: MobileNumber of the owner.
          maxLength: 256
        gender:
          type: string
          description: Gender of the owner.
          maxLength: 256
        fatherOrHusbandName:
          type: string
          description: Father or Husband name of the owner.
          maxLength: 256
        correspondenceAddress:
          type: string
          description: The current address of the owner for correspondence.
          maxLength: 1024
        isPrimaryOwner:
          type: boolean
          description: The owner is primary or not
        ownerShipPercentage:
          type: number
          format: double
          description: Ownership percentage.
        ownerType:
          type: string
          description: 'Type of owner, based on this option Exemptions will be applied. This is master data defined in mdms.'
          maxLength: 256
        institutionId:
          type: string
          description: The id of the institution if the owner is the authorized person for one
          maxLength: 64
        documents:
          description: The documents attached by owner for exemption.
          type: array
          items:
            $ref: '#/components/schemas/Document'
        relationship:
          type: string
          description: The relationship of gaurdian.
          enum:
            - FATHER
            - HUSBAND
      required:
        - name
        - mobileNumber
        - gender
        - fatherOrHusbandName
        - relationship
    Address:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-1-0.yml#/definitions/Address'
        - type: object
          description: Address of the property.
          properties:
            buildingName:
              type: string
              description: Name of the building
              maxLength: 64
              minLength: 2
            street:
              type: string
              description: Street Name
              maxLength: 64
              minLength: 2
            locality:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/egov-location/contracts/v11-0-0.yml#/definitions/Boundary'
          required:
            - locality
    Document:
      type: object
      description: This object holds list of documents attached during the transaciton for a property
      properties:
        id:
          type: string
          maxLength: 64
          description: system id of the Document.
        documentType:
          type: string
          description: 'unique document type code, should be validated with document type master'
        fileStore:
          type: string
          description: File store reference key.
        documentUid:
          type: string
          maxLength: 64
          description: 'The unique id(Pancard Number,Adhar etc.) of the given Document.'
    PropertySubProcess:
      type: object
      description: This object holds information about property sub process such as mutation, bifurcation and amalgamation for a property
      properties:
        id:
          type: string
          maxLength: 64
          readOnly: true
          description: system id of the Document.
        type:
          type: string
          maxLength: 64
          description: type of process being applied on the proeprty(mutation, amalgamation, bifurcation).
        parentPropertyIds:
          type: array
          items: 
           type: string
        childProperties:
          type: array
          items:
           $ref: '#/components/schemas/Property'
          description: File store reference key.
    Unit:
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier of the Unit(UUID).
        tenantId:
          type: string
          description: tenant id of the Property
          maxLength: 256
          minLength: 2
        floorNo:
          type: string
          description: floor number of the Unit
          maxLength: 64
          minLength: 1
          nullable: false
        unitArea:
          type: number
          format: float
          description: Area of the defined Unit.
          nullable: false
        usageCategory:
          type: string
          description: 'This is about the usage of the property like Residential, Non-residential, Mixed(Property witch is gettiong used for Residential, Non-residential purpose)'
          maxLength: 64
          minLength: 1
        occupancyType:
          type: string
          description: Value denoting if the unit is rented or occupied by owner
          enum:
            - OWNER
            - TENANT
          maxLength: 64
          minLength: 1
        occupancyDate:
          type: number
          format: int64
          description: Date on which unit is occupied.
        constructionType:
          type: string
          description: Construction type is defined in MDMS ConstructionTypeMaster.
          maxLength: 64
          minLength: 1
        arv:
          type: number
          format: double
          description: 'Annual rental value(arv), if occupancy type is Tenant.'
    PropertyRequest:
      description: Contract class to receive request. Array of Property items  are used in case of create . Where as single Property item is used for update
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        Property:
          $ref: '#/components/schemas/Property'
        SubProcess:
          $ref: '#/components/schemas/PropertySubProcess'
    PropertyResponse:
      description: Contract class to send response.  Property items  is used in case of search results or response for create. Where as single Property item is used for update
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        Properties:
          description: Used for search result and create only
          items:
            $ref: '#/components/schemas/Property'
    PropertyDeleteRequest:
      description: Class to send the request body for property delete
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        tenantId:
          type: string
          description: The tenantId of the property to be deleted
        propertyId:
          type: string
          description: The propertyId of the property to be deleted
    PropertyDeleteResponse:
      description: Class to send the request body for property delete
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        tenantId:
          type: string
          description: The tenantId of the property to be deleted
        propertyId:
          type: string
          description: The propertyId of the property to be deleted
    AssessmentRequest:
      description: Contract class to receive request. Array of assessment items  are used in case of create . Where as single assessment item is used for update
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        Assessments:
          description: Used for search result and create only
          $ref: '#/components/schemas/Assessment'
    AssessmentResponse:
      description: Contract class to send response. Array of assessment items  are used in case of search results or response for create. Where as single assessment item is used for update
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        Assessments:
          description: Used for search result and create only
          type: array
          items:
            $ref: '#/components/schemas/Assessment'
    AssessmentDeleteRequest:
      description: Class to send the request body for assessment delete
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        tenantId:
          type: string
          description: The tenantId of the assessment to be deleted
        assessmentNumber:
          type: string
          description: The assessment number of the property to be deleted
    AssessmentDeleteResponse:
      description: Class to send the request body for property delete
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        tenantId:
          type: string
          description: The tenantId of the assessment to be deleted
        assessmentNumber:
          type: string
          description: The assessment number of the property to be deleted
